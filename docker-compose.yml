version: '3.8'

services:
  mysql:
    image: mysql:8.0-alpine
    container_name: portfolio_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root_password}
      MYSQL_DATABASE: ${DB_NAME:-portfolio_db}
      MYSQL_USER: ${DB_USERNAME:-edy}
      MYSQL_PASSWORD: ${DB_PASSWORD:-edy123}
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - portfolio_network
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 30s

  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: ${NODE_ENV:-production}
    container_name: portfolio_backend
    restart: always
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DB_HOST=mysql
      - DB_PORT=3306
    ports:
      - '${PORT:-3001}:3001'
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - portfolio_network
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:3001/health',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./logs:/app/logs

volumes:
  mysql_data:
    driver: local

networks:
  portfolio_network:
    driver: bridge
